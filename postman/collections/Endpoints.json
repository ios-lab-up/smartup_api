{
	"info": {
		"_postman_id": "0bf75684-4dba-4ee0-93df-9e198afd2a3f",
		"name": "Endpoints",
		"description": "Documentation for SmartUP-API **BETA** version.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19885566-0bf75684-4dba-4ee0-93df-9e198afd2a3f"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93e8c1f3-c86b-4b4f-8651-b39a7eb90e91",
								"exec": [
									"// Set JWT token",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									"pm.test(\"Env variable set succesfully \", function () {",
									"    pm.environment.set(\"token\", jsonData.user.jwt_token);",
									"});",
									"",
									"// The status code is valid",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//The requests was succesful",
									"pm.test(\"Succesful login\", function () {",
									"    pm.expect(jsonData.sucess).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b2e1ad38-0a94-4c44-9c5f-d7ccd0977313",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": \"0250009\",\r\n  \"password\": \"Lu57529564#\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							]
						},
						"description": "StartFragment\n\n# API Documentation: User Login\n\nThis documentation describes the API endpoint for user login. This endpoint requires a JSON body containing user credentials and returns a response indicating whether the login was successful or not, along with user information.\n\n## Request\n\n### Endpoint\n\n`POST /login`\n\n### Headers\n\n```\nbashCopy codeContent-Type: application/json\n\n```\n\n### Body\n\nThe request body must be a JSON object that includes the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| user_id | string | The ID of the user |\n| password | string | The password of the user |\n\nExample:\n\n```\njsonCopy code{\n  \"user_id\": \"0250009\",\n  \"password\": \"Lu57529564#\"\n}\n\n```\n\n## Response\n\nThe response will be a JSON object that includes the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| code | integer | Numeric code signifying the result of the operation |\n| error | string | An error message, null if the operation was successful |\n| message | string | A human-readable message describing the operation result |\n| status_code | integer | HTTP status code |\n| success | boolean | Indicates whether the operation was successful or not |\n| user | object | Contains details about the logged in user |\n\n### `user` Object\n\nThe `user` object has the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| creationDate | string | Date of creation of the user account |\n| email | string | Email of the user |\n| id | integer | Unique ID of the user |\n| jwt_token | string | JWT token for authenticated requests |\n| lastName | string | Last name of the user |\n| lastupDate | string | The last updated date of user's information |\n| name | string | Name of the user |\n| options | integer | Options set by the user |\n| password | string | Hashed password of the user |\n| profileID | integer | User's profile ID |\n| status | boolean | Status of the user's account |\n| userID | string | The user's ID |\n\nExample:\n\n```\njsonCopy code{\n  \"code\": 1,\n  \"error\": null,\n  \"message\": \"User: 0250009 was succesfully logged in\",\n  \"status_code\": 200,\n  \"success\": true,\n  \"user\": {\n      \"creationDate\": \"Tue, 23 May 2023 00:00:00 GMT\",\n      \"email\": \"0250009@up.edu.mx\",\n      \"id\": 2,\n      \"jwt_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n      \"lastName\": \"Cedillo Maldonado\",\n      \"lastupDate\": \"2023-05-23 01:41:50\",\n      \"name\": \"Luis\",\n      \"options\": 0,\n      \"password\": \"$2b$12$6nphhYcArjB15eDF8QYpcuvboZ/PlQu7OI/aKN.TA.qsrGRc9lNva\",\n      \"profileID\": 3,\n      \"status\": true,\n      \"userID\": \"0250009\"\n  }\n}\n\n```\n\nEndFragment"
					},
					"response": []
				},
				{
					"name": "Register Guest",
					"id": "2579d499-9e11-4216-b208-def33301e046",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Luis\",\r\n  \"lastName\": \"Cedillo\",\r\n  \"email\": \"luisced02031@gmail.com\",\r\n  \"visitDate\": \"04/19/2023\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5555/user/registerGuest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5555",
							"path": [
								"user",
								"registerGuest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75a3f6fc-35aa-49a6-b463-6fb2a153a942",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"// The status code is valid",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//The requests was succesful",
									"pm.test(\"Succesful request\", function () {",
									"    pm.expect(jsonData.sucess).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0f50a1e1-1f07-47eb-9c18-87dbb869be2c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": \"all\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/getUsers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"getUsers"
							]
						}
					},
					"response": []
				}
			],
			"id": "d7e241d6-73ef-4441-b76e-21c16bd73c8b"
		},
		{
			"name": "UPSite",
			"item": [
				{
					"name": "Subjects",
					"item": [],
					"id": "8f73028d-598a-4fb0-ac2d-3f24f402c676"
				}
			],
			"id": "b362dff6-fde0-4619-8835-e397fc640ae4"
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Get Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c086b19-e455-4c15-bdd9-b829fd6be912",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"// The status code is valid",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//The requests was succesful",
									"pm.test(\"Succesful request\", function () {",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c1717bc2-d783-4d3b-b562-9bc35f030ae5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"filter\": \"all\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/getGroup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"getGroup"
							]
						}
					},
					"response": []
				}
			],
			"id": "624dc34e-20e1-48dc-bead-54c3a8d31d88"
		},
		{
			"name": "Tools",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c5618fe-3a7d-45e0-a259-fd604adea870",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"// The status code is valid",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "590c43ac-4a11-4c5c-868e-81d2503fa5c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/health_check",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health_check"
							]
						}
					},
					"response": []
				}
			],
			"id": "5f82237f-3b56-480b-adc3-825e2caf1e78"
		},
		{
			"name": "ScheduleMaker",
			"item": [
				{
					"name": "Create Compatible Schedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c82fe558-376a-4671-ad25-5e2a1b515458",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"// The status code is valid\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"//The requests was succesful\r",
									"pm.test(\"Succesful request\", function () {\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8a078c49-7b0c-4c32-8bd6-c2913e3e3b6a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subjects\":[47,48,6,7,9,25,22],\r\n    \"teachers\":[8,21], // Optional\r\n    \"minimum\": 5 //Optional\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/createSchedules",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"createSchedules"
							]
						}
					},
					"response": []
				}
			],
			"id": "c3a89fbd-a7e6-4f3c-8e36-fbcbfe321797"
		}
	]
}